{"version":3,"sources":["components/TodoApp.js","components/TodoItem.js","components/TodoList.js","App.js","index.js"],"names":["TodoApp","state","input","addTask","trim","props","setState","inputChange","event","target","value","handleSubmit","preventDefault","this","onSubmit","type","onChange","className","placeholder","React","Component","TodoItem","task","toggleCompleteTask","deleteTask","key","id","classnames","completed","onClick","htmlFor","title","TodoList","tasks","map","App","taskName","prevState","push","length","index","indexOf","activeTasks","filter","doneTasks","allTasks","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7609facb.chunk.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\n\nclass TodoApp extends React.Component {\n  state = {\n    input: '',\n  };\n\n  addTask = () => {\n    const { input } = this.state;\n\n    if (input.trim()) {\n      this.props.addTask(input);\n      this.setState({ input: '' });\n    }\n  }\n\n  inputChange = event => this.setState({ input: event.target.value });\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.addTask();\n  }\n\n  render() {\n    const { input } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={this.inputChange}\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n      </form>\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  addTask: propTypes.func.isRequired,\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport classnames from 'classnames';\n\nclass TodoItem extends React.Component {\n  state = {}\n\n  render() {\n    const { task, toggleCompleteTask, deleteTask } = this.props;\n\n    return (\n      <li\n        key={task.id}\n        className={classnames({ completed: task.completed })}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={task.id}\n            onClick={() => toggleCompleteTask(task.id)}\n          />\n          <label htmlFor={task.id}>{task.title}</label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => deleteTask(task.id)}\n          />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  task: propTypes.objectOf(propTypes.shape({\n    id: propTypes.number.isRequired,\n    title: propTypes.string.isRequired,\n    completed: propTypes.bool.isRequired,\n  })).isRequired,\n  toggleCompleteTask: propTypes.func.isRequired,\n  deleteTask: propTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nclass TodoList extends React.Component {\n  state = {\n\n  }\n\n  render() {\n    const { tasks, toggleCompleteTask, deleteTask } = this.props;\n\n    return (\n      <ul className=\"todo-list\">\n        {tasks.map(task => (\n          <TodoItem\n            task={task}\n            toggleCompleteTask={toggleCompleteTask}\n            deleteTask={deleteTask}\n          />\n        ))}\n        {/* <li>\n          <div className=\"view\">\n            <input type=\"checkbox\" className=\"toggle\" id=\"todo-1\" />\n            <label htmlFor=\"todo-1\">asdfghj</label>\n            <button type=\"button\" className=\"destroy\" />\n          </div>\n          <input type=\"text\" className=\"edit\" />\n        </li>\n\n        <li className=\"completed\">\n          <div className=\"view\">\n            <input type=\"checkbox\" className=\"toggle\" id=\"todo-2\" />\n            <label htmlFor=\"todo-2\">qwertyuio</label>\n            <button type=\"button\" className=\"destroy\" />\n          </div>\n          <input type=\"text\" className=\"edit\" />\n        </li>\n\n        <li className=\"editing\">\n          <div className=\"view\">\n            <input type=\"checkbox\" className=\"toggle\" id=\"todo-3\" />\n            <label htmlFor=\"todo-3\">zxcvbnm</label>\n            <button type=\"button\" className=\"destroy\" />\n          </div>\n          <input type=\"text\" className=\"edit\" />\n        </li>\n\n        <li>\n          <div className=\"view\">\n            <input type=\"checkbox\" className=\"toggle\" id=\"todo-4\" />\n            <label htmlFor=\"todo-4\">1234567890</label>\n            <button type=\"button\" className=\"destroy\" />\n          </div>\n          <input type=\"text\" className=\"edit\" />\n        </li> */}\n      </ul>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  tasks: propTypes.arrayOf(propTypes.shape({\n    id: propTypes.number.isRequired,\n    title: propTypes.string.isRequired,\n    completed: propTypes.bool.isRequired,\n  })).isRequired,\n  toggleCompleteTask: propTypes.func.isRequired,\n  deleteTask: propTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport TodoApp from './components/TodoApp';\nimport TodoList from './components/TodoList';\n\nclass App extends React.Component {\n  state = {\n    tasks: [\n      {\n        id: 0, title: 'go Home', completed: false,\n      },\n    ],\n  };\n\n  addTask = (taskName) => {\n    this.setState((prevState) => {\n      const { tasks } = prevState;\n\n      tasks.push({\n        id: tasks.length !== 0 ? tasks.length : 0,\n        title: taskName,\n        completed: false,\n      });\n\n      return tasks;\n    });\n  };\n\n  toggleCompleteTask = (id) => {\n    this.setState(prevState => ({\n      tasks: prevState.tasks.map((task) => {\n        if (task.id !== id) {\n          return task;\n        }\n\n        return {\n          ...task,\n          completed: !task.completed,\n        };\n      }),\n    }));\n  };\n\n  deleteTask = (id) => {\n    const index = this.state.tasks.map(task => task.id).indexOf(id);\n\n    this.setState((prevState) => {\n      const { tasks } = prevState;\n\n      delete tasks[index];\n\n      return tasks;\n    });\n  }\n\n  render() {\n    const { tasks } = this.state;\n    const activeTasks = tasks.filter(task => !task.completed);\n    const doneTasks = tasks.filter(task => task.completed);\n    const allTasks = [...activeTasks, ...doneTasks];\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <TodoApp addTask={this.addTask} />\n        </header>\n\n        <section className=\"main\">\n          <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <TodoList\n            tasks={allTasks}\n            toggleCompleteTask={this.toggleCompleteTask}\n            deleteTask={this.deleteTask}\n          />\n\n        </section>\n\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\n            {tasks.filter(task => task.completed === false).length} items left\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a href=\"#/\" className=\"selected\">All</a>\n            </li>\n\n            <li>\n              <a href=\"#/active\">Active</a>\n            </li>\n\n            <li>\n              <a href=\"#/completed\">Completed</a>\n            </li>\n          </ul>\n\n          <button type=\"button\" className=\"clear-completed\">\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}